services:
  simple_api_build:
    build:
      context: "${CONTEXT_PATH_SIMPLE_API}"
    image: simple_api

  gateway_api_build:
    build:
      context: "${CONTEXT_PATH_GATEWAY_API}"
    image: gateway_api

  load_testing_build:
    build:
      context: "${CONTEXT_PATH_LOAD_TESTING}"
    image: load_testing

  redis-1:
    build: "${CONTEXT_PATH_REDIS}"
    env_file:
      - .env
    container_name: redis-1
    volumes:
      - "${CONTEXT_PATH_REDIS_DATA}/node1:/data"
    ports:
      - "6379:6379"
      - "16379:16379"
    healthcheck:
      test: [ "CMD", "redis-cli", "-h", "localhost", "ping" ]
      interval: "${REDIS_HEALTH_CHECK_INTERVAL}"
      timeout: "${REDIS_HEALTH_CHECK_TIMEOUT}"
      retries: "${REDIS_HEALTH_CHECK_RETRIES}"

  redis-2:
    build: "${CONTEXT_PATH_REDIS}"
    env_file:
      - .env
    container_name: redis-2
    volumes:
      - "${CONTEXT_PATH_REDIS_DATA}/node2:/data"
    ports:
      - "6380:6379"
      - "16380:16380"
    healthcheck:
      test: [ "CMD", "redis-cli", "-h", "localhost", "ping" ]
      interval: "${REDIS_HEALTH_CHECK_INTERVAL}"
      timeout: "${REDIS_HEALTH_CHECK_TIMEOUT}"
      retries: "${REDIS_HEALTH_CHECK_RETRIES}"

  redis-3:
    build: "${CONTEXT_PATH_REDIS}"
    env_file:
      - .env
    container_name: redis-3
    volumes:
      - "${CONTEXT_PATH_REDIS_DATA}/node3:/data"
    ports:
      - "6381:6379"
      - "16381:16381"
    healthcheck:
      test: [ "CMD", "redis-cli", "-h", "localhost", "ping" ]
      interval: "${REDIS_HEALTH_CHECK_INTERVAL}"
      timeout: "${REDIS_HEALTH_CHECK_TIMEOUT}"
      retries: "${REDIS_HEALTH_CHECK_RETRIES}"

  redis-4:
    build: "${CONTEXT_PATH_REDIS}"
    env_file:
      - .env
    container_name: redis-4
    volumes:
      - "${CONTEXT_PATH_REDIS_DATA}/node4:/data"
    ports:
      - "6382:6379"
      - "16382:16382"
    healthcheck:
      test: [ "CMD", "redis-cli", "-h", "localhost", "ping" ]
      interval: "${REDIS_HEALTH_CHECK_INTERVAL}"
      timeout: "${REDIS_HEALTH_CHECK_TIMEOUT}"
      retries: "${REDIS_HEALTH_CHECK_RETRIES}"

  redis-5:
    build: "${CONTEXT_PATH_REDIS}"
    env_file:
      - .env
    container_name: redis-5
    volumes:
      - "${CONTEXT_PATH_REDIS_DATA}/node5:/data"
    ports:
      - "6383:6379"
      - "16383:16383"
    healthcheck:
      test: [ "CMD", "redis-cli", "-h", "localhost", "ping" ]
      interval: "${REDIS_HEALTH_CHECK_INTERVAL}"
      timeout: "${REDIS_HEALTH_CHECK_TIMEOUT}"
      retries: "${REDIS_HEALTH_CHECK_RETRIES}"

  redis-6:
    build: "${CONTEXT_PATH_REDIS}"
    env_file:
      - .env
    container_name: redis-6
    volumes:
      - "${CONTEXT_PATH_REDIS_DATA}/node6:/data"
    ports:
      - "6384:6379"
      - "16384:16384"
    healthcheck:
      test: [ "CMD", "redis-cli", "-h", "localhost", "ping" ]
      interval: "${REDIS_HEALTH_CHECK_INTERVAL}"
      timeout: "${REDIS_HEALTH_CHECK_TIMEOUT}"
      retries: "${REDIS_HEALTH_CHECK_RETRIES}"

  redis-init:
    build: "${CONTEXT_PATH_REDIS}"
    env_file:
      - .env
    container_name: redis-init
    depends_on:
      - redis-1
      - redis-2
      - redis-3
      - redis-4
      - redis-5
      - redis-6
    entrypoint: [ "/bin/sh", "-c", "/usr/local/bin/init-redis-cluster.sh" ]
    volumes:
      - "${CONTEXT_PATH_REDIS_DATA}:/data"
    restart: "on-failure"

  nano_postgresql_compose:
    build:
      context: "${CONTEXT_PATH_POSTGRESQL}"
      args:
        POSTGRESQL_CONF_FILE: "${POSTGRESQL_CONF_FILE}"
    image: nano_postgresql_compose
    container_name: nano_postgresql_compose
    restart: always
    volumes:
      - "${POSTGRES_DATA_PATH}:/var/lib/postgresql/data"
      - "${INIT_SQL_PATH}:/docker-entrypoint-initdb.d/0.sql"
    ports:
      - "${POSTGRESQL_PORT}:${INTERNAL_POSTGRESQL_PORT}"
    environment:
      - "POSTGRES_DB=${POSTGRES_DB}"
      - "POSTGRES_USER=${POSTGRES_USER}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 3

  nano-keycloak-compose:
    build:
      context: "${CONTEXT_PATH_KEYCLOAK}"
      args:
        KEYCLOAK_CONF_FILE: "${KEYCLOAK_CONF_FILE}"
        KEYCLOAK_DEFAULT_REALMS: "${KEYCLOAK_DEFAULT_REALMS}"
    image: nano-keycloak-compose
    container_name: nano-keycloak-compose
    volumes:
      - "${KEYCLOAK_DATA_PATH}:/opt/keycloak/data"
    ports:
      - "${KEYCLOAK_PORT}:${INTERNAL_KEYCLOAK_PORT}"
      - "${KEYCLOAK_HEALTH_CHECK_PORT}:${INTERNAL_KEYCLOAK_HEALTH_CHECK_PORT}"
    environment:
      - "KC_BOOTSTRAP_ADMIN_USERNAME=${KC_BOOTSTRAP_ADMIN_USERNAME}"
      - "KC_BOOTSTRAP_ADMIN_PASSWORD=${KC_BOOTSTRAP_ADMIN_PASSWORD}"
      - "JAVA_OPTS_KC_HEAP=${JAVA_OPTS_KC_HEAP}"
    depends_on:
      nano_postgresql_compose:
        condition: service_healthy

  simple_api_1:
    image: simple_api
    env_file:
      - .env
    container_name: simple_api_1
    ports:
      - "${SIMPLE_API_1_PORT}:${INTERNAL_QUARKUS_HTTP_PORT}"
    environment:
      - "QUARKUS_HTTP_PORT=${INTERNAL_QUARKUS_HTTP_PORT}"
    depends_on:
      - simple_api_build

  simple_api_2:
    image: simple_api
    env_file:
      - .env
    container_name: simple_api_2
    ports:
      - "${SIMPLE_API_2_PORT}:${INTERNAL_QUARKUS_HTTP_PORT}"
    environment:
      - "QUARKUS_HTTP_PORT=${INTERNAL_QUARKUS_HTTP_PORT}"
    depends_on:
      - simple_api_build

  simple_api_3:
    image: simple_api
    env_file:
      - .env
    container_name: simple_api_3
    ports:
      - "${SIMPLE_API_3_PORT}:${INTERNAL_QUARKUS_HTTP_PORT}"
    environment:
      - "QUARKUS_HTTP_PORT=${INTERNAL_QUARKUS_HTTP_PORT}"
    depends_on:
      - simple_api_build

  simple_api_4:
    image: simple_api
    env_file:
      - .env
    container_name: simple_api_4
    ports:
      - "${SIMPLE_API_4_PORT}:${INTERNAL_QUARKUS_HTTP_PORT}"
    environment:
      - "QUARKUS_HTTP_PORT=${INTERNAL_QUARKUS_HTTP_PORT}"
    depends_on:
      - simple_api_build

  simple_api_5:
    image: simple_api
    env_file:
      - .env
    container_name: simple_api_5
    ports:
      - "${SIMPLE_API_5_PORT}:${INTERNAL_QUARKUS_HTTP_PORT}"
    environment:
      - "QUARKUS_HTTP_PORT=${INTERNAL_QUARKUS_HTTP_PORT}"
    depends_on:
      - simple_api_build

  gateway_api:
    image: gateway_api
    env_file:
      - .env
    container_name: gateway_api
    ports:
      - "${GATEWAY_API_PORT}:${INTERNAL_QUARKUS_HTTP_PORT}"
      - "${GATEWAY_API_DEBUGGER_PORT}:${GATEWAY_API_DEBUGGER_PORT}"
    environment:
      - "QUARKUS_HTTP_PORT=${INTERNAL_QUARKUS_HTTP_PORT}"
      - "AVAILABLE_API_INSTANCES=${AVAILABLE_API_INSTANCES}"
    depends_on:
      - simple_api_1
      - simple_api_2
      - simple_api_3
      - simple_api_4
      - simple_api_5
      - gateway_api_build
      - nano-keycloak-compose
      - redis-init
      - load_testing_build
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:${GATEWAY_API_PORT}/gateway-api/q/health"]
      interval: 5s
      timeout: 3s
      retries: 3

  load_testing:
    image: load_testing
    env_file:
      - .env
    container_name: load_testing
    depends_on:
      gateway_api:
        condition: service_healthy
